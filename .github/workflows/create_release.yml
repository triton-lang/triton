name: Create Release

on:
  push:
    branches:
      - main
      - release/*
    tags:
      # Final Release tags look like: v1.11.0
      - v[0-9]+.[0-9]+.[0-9]+
      # Release candidate tags look like: v1.11.0-rc1
      - v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+
  release:
    types: [published]
  pull_request:
    paths: [.github/workflows/create_release.yml]

jobs:

  release:
    if: ${{ github.repository == 'triton-lang/triton' }}
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      release_name: "${{ steps.release_name.outputs.name }}"
    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false
          submodules: 'recursive'
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
      - name: Fake name for PRs
        if: ${{ github.event_name == 'pull_request' }}
        run: echo "PT_GITHUB_REF=refs/tags/pr-tag" >> "$GITHUB_ENV"
      - name: Real name for non-PRs
        if: ${{ github.event_name != 'pull_request' }}
        run: echo "PT_GITHUB_REF=$GITHUB_REF" >> "$GITHUB_ENV"
      - name: Set filenames
        run: |
          tag_or_branch="${PT_GITHUB_REF#refs/tags/}"
          tag_or_branch="${tag_or_branch#refs/heads/}"
          # replace directory separators with _ in branch name
          tag_or_branch="${tag_or_branch//\//_}"
          echo "RELEASE_NAME=triton-$tag_or_branch" >> "$GITHUB_ENV"
          echo "RELEASE_FILE=triton-$tag_or_branch.tar.gz" >> "$GITHUB_ENV"
      - name: Create source distribution
        run: |
            # Create new folder with specified name so extracting the archive yields that
            rm -rf "/tmp/$RELEASE_NAME"
            cp -r "$PWD" "/tmp/$RELEASE_NAME"
            mv "/tmp/$RELEASE_NAME" .
            # Cleanup
            find "$RELEASE_NAME" -name '.git*' -exec rm -rv {} \; || true
            # Create archive
            tar -czf "$RELEASE_FILE" "$RELEASE_NAME"
            echo "Created source archive $RELEASE_FILE with content: $(ls -a "$RELEASE_NAME")"
      - name: Upload source distribution for release
        if: ${{ github.event_name == 'release' }}
        uses: softprops/action-gh-release@v2
        with:
          files: ${{env.RELEASE_FILE}}
      - name: Upload source distribution to GHA artifacts for release tags
        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && contains(github.ref, 'rc') }}
        uses: actions/upload-artifact@v4.4.0
        with:
          name: ${{ env.RELEASE_FILE }}
          path: ${{ env.RELEASE_FILE }}
      - name: Set output
        id: release_name
        run: echo "name=release_name::${{ env.RELEASE_NAME }}.tar.gz" >> "${GITHUB_OUTPUT}"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}-${{ github.event_name }}
  cancel-in-progress: true
